I am trying to create a Notion ORM package in Python. It basically wraps the notion-client, providing an easy, pythonic way to interact with Notion databases. It should essentially include classes for the different Notion database property types (eg title, text, checkbox, select, multi-select, date, number, formula etc), providing methods to create/edit/view values in a way that deals with Notions annoying json payload formats. There should then be a Page class, that uses these property classes to create/edit/view pages in a way that is easy to use and understand, using pythonic types / syntax etc, and converting to/from what notion expects. Finally, there should be a Database class, which actually establishes a connection to the database, which uses these page and property classes to make it easy to create/edit/view the pages of the database. It should also be able to "infer" from the Notion Database, meaning it pulls the "schema" by pulling a single page and checking the properties and their types - and converting them to the property classes. Everything should be well typed, avoiding "catchall" types / dict inputs. It should also be well documented, with examples and a readme. Help the user achieve these goals. 